/* This script allows the user to perform parameter sweep of up to 3 parameters in a simulation
session. To sweep a parameter for two or more values, simply list the values after the parameter
as illustrated below:

public double x = 2, 3.1, 4.2, 5;

As mentioned aboveUp to 3 parameters can be swept in a single session, e.g.:

public double x = 2.7, 3.1;
public int y = 1, 2, 3;
public boolean z = true, false;

An x X y X z Cartisian crossproduct table is generated for conducting the parameter sweep:

public double x = 2.7,  2.7,  2.7,  2.7,  2.7,  2,7,  3.1,  3.1,  3.1,  3.1,  3.1,  3.1;
public int y =    1,    1,    2,    2,    3,    3,    1,    1,    2,    2,    3,    3;
public boolean z =true, false,true, false,true, false,true, false,true, false,true, false;

The table is generated from the first three parameters encountered with more than one value.
After 3 parameters are encountered with more than one value, subsequent parameters with more than
one value are ignored.*/

//initial numbers of each strategy
public int _cooperators = 500;
public int _defectors = 500;
public int _walkawayCooperators = 0;
public int _walkawayDefectors = 0;
public int _tftMobile = 0;
public int _tftStationary = 0;
public int _pavlovMobile = 0;
public int _pavlovStationary = 0;
public boolean groups = true, false;
public int memorySize = 3;
public double active = 1.0;
public double averageAge = 50.0; //Average lifespan of an agent
public double sdAge = 10.0; //standard deviation in lifespan
public double mutationRate = 0.01;
public double resoucesToReproduce = 30.0; //quantity of resources agents need to reproduce
public double minResourcesStart = 30.0; //range of initial starting resources, a random number in this range
public double maxResourcesStart = 30.0;
public double carryingCapacity = 2000.0;
public int searchRadiusPlayer = 1;
//payoffs
public double cooperate_cooperator = 3.0; //cooperator payoff, R
public double defect_defector = 0.0;//defector payoff, P
public double cooperate_defector = 0.0, -0.5, -1.0, -1.5, -2.0;//sucker's payoff
public double defect_cooperator = 5.0;//temptation payoff
public int reproductionRadius = 1; //number of squares from a parent an offspring is placed
public double lowerBoundsSurvival = 0.0;//if resources go below this number, agents die
public boolean useLowerBoundsSurvival = true;
public boolean localReproduction = true;//if true, thenreproductionRadious is used
public boolean mutationRange = true;//if true, only initial strategies > 0 can mutate
public boolean charts = true;//if true, use charts
public int gridWidth = 100;
public int gridHeight = 100;
public long simLength = 2501; //the number of time steps in each simulation
public int simNumber = 10; //the number of simulations for each conditions
public int dataSamplingInterval = 50;
public boolean closeProgramAtend = true; //if true, program closes after it is finished

